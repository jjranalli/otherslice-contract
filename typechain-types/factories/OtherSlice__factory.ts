/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OtherSlice, OtherSliceInterface } from "../OtherSlice";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slicerId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200170c3803806200170c83398101604081905262000034916200020f565b818185858160029080519060200190620000509291906200009c565b508051620000669060039060208401906200009c565b50600080555050600880546001600160a01b0319166001600160a01b03939093169290921790915560805250620002de92505050565b828054620000aa90620002a2565b90600052602060002090601f016020900481019282620000ce576000855562000119565b82601f10620000e957805160ff191683800117855562000119565b8280016001018555821562000119579182015b8281111562000119578251825591602001919060010190620000fc565b50620001279291506200012b565b5090565b5b808211156200012757600081556001016200012c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016a57600080fd5b81516001600160401b038082111562000187576200018762000142565b604051601f8301601f19908116603f01168101908282118183101715620001b257620001b262000142565b81604052838152602092508683858801011115620001cf57600080fd5b600091505b83821015620001f35785820183015181830184015290820190620001d4565b83821115620002055760008385830101525b9695505050505050565b600080600080608085870312156200022657600080fd5b84516001600160401b03808211156200023e57600080fd5b6200024c8883890162000158565b955060208701519150808211156200026357600080fd5b50620002728782880162000158565b604087015190945090506001600160a01b03811681146200029257600080fd5b6060959095015193969295505050565b600181811c90821680620002b757607f821691505b602082108103620002d857634e487b7160e01b600052602260045260246000fd5b50919050565b608051611412620002fa6000396000610ab901526114126000f3fe6080604052600436106100f35760003560e01c806370a082311161008a578063a23fffb911610059578063a23fffb9146102a8578063b88d4fde146102bb578063c87b56dd146102db578063e985e9c5146102fb57600080fd5b806370a082311461022c57806395d89b411461024c57806395db936814610261578063a22cb4651461028857600080fd5b806318160ddd116100c657806318160ddd146101a957806323b872dd146101cc57806342842e0e146101ec5780636352211e1461020c57600080fd5b806301ffc9a7146100f857806306fdde031461012d578063081812fc1461014f578063095ea7b314610187575b600080fd5b34801561010457600080fd5b50610118610113366004610f1f565b610344565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b50610142610396565b6040516101249190610f94565b34801561015b57600080fd5b5061016f61016a366004610fa7565b610428565b6040516001600160a01b039091168152602001610124565b34801561019357600080fd5b506101a76101a2366004610fdc565b61046c565b005b3480156101b557600080fd5b50600154600054035b604051908152602001610124565b3480156101d857600080fd5b506101a76101e7366004611006565b6104f9565b3480156101f857600080fd5b506101a7610207366004611006565b610504565b34801561021857600080fd5b5061016f610227366004610fa7565b61051f565b34801561023857600080fd5b506101be610247366004611042565b610531565b34801561025857600080fd5b50610142610580565b34801561026d57600080fd5b5061011861027c366004611100565b60019695505050505050565b34801561029457600080fd5b506101a76102a3366004611190565b61058f565b6101a76102b6366004611100565b610624565b3480156102c757600080fd5b506101a76102d63660046111cc565b610641565b3480156102e757600080fd5b506101426102f6366004610fa7565b610692565b34801561030757600080fd5b50610118610316366004611234565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061037557506001600160e01b03198216635b5e139f60e01b145b8061039057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546103a590611267565b80601f01602080910402602001604051908101604052809291908181526020018280546103d190611267565b801561041e5780601f106103f35761010080835404028352916020019161041e565b820191906000526020600020905b81548152906001019060200180831161040157829003601f168201915b5050505050905090565b600061043382610723565b610450576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006104778261051f565b9050806001600160a01b0316836001600160a01b0316036104ab5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906104cb57506104c98133610316565b155b156104e9576040516367d9dca160e11b815260040160405180910390fd5b6104f483838361074e565b505050565b6104f48383836107aa565b6104f483838360405180602001604052806000815250610641565b600061052a8261099a565b5192915050565b60006001600160a01b03821661055a576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546103a590611267565b336001600160a01b038316036105b85760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b8561062e81610ab6565b6106388585610b24565b50505050505050565b61064c8484846107aa565b6001600160a01b0383163b1515801561066e575061066c84848484610b42565b155b1561068c576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061069d82610723565b6106ba57604051630a14c4b560e41b815260040160405180910390fd5b60006106d160408051602081019091526000815290565b905080516000036106f1576040518060200160405280600081525061071c565b806106fb84610c2e565b60405160200161070c9291906112a1565b6040516020818303038152906040525b9392505050565b6000805482108015610390575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006107b58261099a565b9050836001600160a01b031681600001516001600160a01b0316146107ec5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061080a575061080a8533610316565b8061082557503361081a84610428565b6001600160a01b0316145b90508061084557604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661086c57604051633a954ecd60e21b815260040160405180910390fd5b6108786000848761074e565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b4290921691909102178355870180845292208054919390911661094e57600054821461094e578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b604080516060810182526000808252602082018190529181019190915281600054811015610a9d57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff16151591810182905290610a9b5780516001600160a01b031615610a31579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215610a96579392505050565b610a31565b505b604051636f96cda160e11b815260040160405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000014610af657604051632eafdb6960e01b815260040160405180910390fd5b6008546001600160a01b03163314610b21576040516347322d0360e01b815260040160405180910390fd5b50565b610b3e828260405180602001604052806000815250610d2f565b5050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610b779033908990889088906004016112d0565b6020604051808303816000875af1925050508015610bb2575060408051601f3d908101601f19168201909252610baf9181019061130d565b60015b610c10573d808015610be0576040519150601f19603f3d011682016040523d82523d6000602084013e610be5565b606091505b508051600003610c08576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606081600003610c555750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c7f5780610c6981611340565b9150610c789050600a8361136f565b9150610c59565b60008167ffffffffffffffff811115610c9a57610c9a61105d565b6040519080825280601f01601f191660200182016040528015610cc4576020820181803683370190505b5090505b8415610c2657610cd9600183611383565b9150610ce6600a8661139a565b610cf19060306113ae565b60f81b818381518110610d0657610d066113c6565b60200101906001600160f81b031916908160001a905350610d28600a8661136f565b9450610cc8565b6104f483838360016000546001600160a01b038516610d6057604051622e076360e81b815260040160405180910390fd5b83600003610d815760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b429092169190910217905580808501838015610e3357506001600160a01b0387163b15155b15610ebb575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610e846000888480600101955088610b42565b610ea1576040516368d2bf6b60e11b815260040160405180910390fd5b808203610e39578260005414610eb657600080fd5b610f00565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808203610ebc575b50600055610993565b6001600160e01b031981168114610b2157600080fd5b600060208284031215610f3157600080fd5b813561071c81610f09565b60005b83811015610f57578181015183820152602001610f3f565b8381111561068c5750506000910152565b60008151808452610f80816020860160208601610f3c565b601f01601f19169290920160200192915050565b60208152600061071c6020830184610f68565b600060208284031215610fb957600080fd5b5035919050565b80356001600160a01b0381168114610fd757600080fd5b919050565b60008060408385031215610fef57600080fd5b610ff883610fc0565b946020939093013593505050565b60008060006060848603121561101b57600080fd5b61102484610fc0565b925061103260208501610fc0565b9150604084013590509250925092565b60006020828403121561105457600080fd5b61071c82610fc0565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261108457600080fd5b813567ffffffffffffffff8082111561109f5761109f61105d565b604051601f8301601f19908116603f011681019082821181831017156110c7576110c761105d565b816040528381528660208588010111156110e057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561111957600080fd5b863595506020870135945061113060408801610fc0565b935060608701359250608087013567ffffffffffffffff8082111561115457600080fd5b6111608a838b01611073565b935060a089013591508082111561117657600080fd5b5061118389828a01611073565b9150509295509295509295565b600080604083850312156111a357600080fd5b6111ac83610fc0565b9150602083013580151581146111c157600080fd5b809150509250929050565b600080600080608085870312156111e257600080fd5b6111eb85610fc0565b93506111f960208601610fc0565b925060408501359150606085013567ffffffffffffffff81111561121c57600080fd5b61122887828801611073565b91505092959194509250565b6000806040838503121561124757600080fd5b61125083610fc0565b915061125e60208401610fc0565b90509250929050565b600181811c9082168061127b57607f821691505b60208210810361129b57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516112b3818460208801610f3c565b8351908301906112c7818360208801610f3c565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061130390830184610f68565b9695505050505050565b60006020828403121561131f57600080fd5b815161071c81610f09565b634e487b7160e01b600052601160045260246000fd5b6000600182016113525761135261132a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261137e5761137e611359565b500490565b6000828210156113955761139561132a565b500390565b6000826113a9576113a9611359565b500690565b600082198211156113c1576113c161132a565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212203148ee6bbfa0ddb87912a3c56424125851c9b923c4e0dba754eb539e159b445c64736f6c634300080d0033";

type OtherSliceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OtherSliceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OtherSlice__factory extends ContractFactory {
  constructor(...args: OtherSliceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OtherSlice";
  }

  deploy(
    name_: string,
    symbol_: string,
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OtherSlice> {
    return super.deploy(
      name_,
      symbol_,
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    ) as Promise<OtherSlice>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    );
  }
  attach(address: string): OtherSlice {
    return super.attach(address) as OtherSlice;
  }
  connect(signer: Signer): OtherSlice__factory {
    return super.connect(signer) as OtherSlice__factory;
  }
  static readonly contractName: "OtherSlice";
  public readonly contractName: "OtherSlice";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OtherSliceInterface {
    return new utils.Interface(_abi) as OtherSliceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OtherSlice {
    return new Contract(address, _abi, signerOrProvider) as OtherSlice;
  }
}
